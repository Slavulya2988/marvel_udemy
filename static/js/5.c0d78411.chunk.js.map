{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","utils/setContentWithLoad.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homePage","urls","wiki","comics","items","_comics$textObjects$","title","price","prices","pageCount","language","textObjects","setContentWithLoad","Component","newItemsLoading","Spinner","ErorrMessage","AppBanner","_jsxs","children","avengers","avengersLogo","ComicsList","comicsList","setComicsList","_useState3","_useState4","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","endComicsList","setEndcomicsList","_useMarvelService","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","Link","to","renderComics","disabled","style","onClick","ComicPage","_Fragment"],"mappings":"iGAAe,UAA0B,kC,eCS1BA,IANO,WAClB,OACIC,cAAA,OAAKC,IAAKC,EAAKC,IAAI,QAAQC,UAAU,Y,yECuE9BC,IA1EU,WACxB,IAAAC,ECDsB,WAEnB,IAAAC,EAA8BC,mBAAS,WAAUC,EAAAC,YAAAH,EAAA,GAA1CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GA4B1B,MAAO,CAACI,QA1BQC,sBAAW,eAAAC,EAAAC,YAAAC,IAAAC,MAAC,SAAAC,EAAOC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEX,OAFaV,EAAMK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,MAAOJ,EAAII,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAG,KAAMH,EAAOG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAI,CAAC,eAAiB,oBAE7Fd,EAAW,WAAWiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGIG,MAAMd,EAAK,CAACC,SAAQC,OAAMC,YAAU,KAAD,EAA5C,IAARC,EAAQK,EAAAM,MACAC,GAAG,CAADP,EAAAE,KAAA,eACN,IAAIM,MAAM,mBAADC,OAAoBlB,EAAG,cAAAkB,OAAad,EAASe,SAAU,KAAD,UAAAV,EAAAE,KAAA,GAEtDP,EAASgB,OAAO,KAAD,GAAxB,OAAJf,EAAII,EAAAM,KAAAN,EAAAY,OAAA,SAEHhB,GAAI,QAGS,MAHTI,EAAAC,KAAA,GAAAD,EAAAa,GAAAb,EAAA,SAGXjB,EAAW,SAASiB,EAAAa,GAAA,yBAAAb,EAAAc,UAAAxB,EAAA,mBAI3B,gBAAAyB,GAAA,OAAA7B,EAAA8B,MAAA,KAAAlB,YAlB0B,GAkBvB,IAQamB,WANEhC,uBAAa,WACxBF,EAAW,aAEhB,IAG0BD,UAASC,cD7BYmC,GAA7ClC,EAAOP,EAAPO,QAAUiC,EAAUxC,EAAVwC,WAAYnC,EAAOL,EAAPK,QAASC,EAAUN,EAAVM,WAEjCoC,EAAW,4CACXC,EAAW,0CAIXC,EAAgB,eAAAnC,EAAAC,YAAAC,IAAAC,MAAG,SAAAC,IAAA,IAAAgC,EAAAC,EAAA1B,EAAAC,UAAA,OAAAV,IAAAW,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAA2B,OAApBoB,EAAMzB,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAHlB,IAGgCG,EAAAE,KAAA,EACjClB,EAAQ,GAADyB,OAAIU,EAAQ,8BAAAV,OAA6Ba,EAAM,KAAAb,OAAIW,IAAW,KAAD,EAA7E,OAAHG,EAAGvB,EAAAM,KAAAN,EAAAY,OAAA,SACFW,EAAI3B,KAAK4B,QAAQC,IAAIC,IAAoB,wBAAA1B,EAAAc,UAAAxB,OAC/C,kBAHoB,OAAAJ,EAAA8B,MAAA,KAAAlB,YAAA,GAKhB6B,EAAY,eAAAC,EAAAzC,YAAAC,IAAAC,MAAG,SAAAwC,EAAOC,GAAE,IAAAP,EAAA,OAAAnC,IAAAW,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACXlB,EAAQ,GAADyB,OAAIU,EAAQ,eAAAV,OAAcqB,EAAE,KAAArB,OAAIW,IAAW,KAAD,EAA1D,OAAHG,EAAGQ,EAAAzB,KAAAyB,EAAAnB,OAAA,SAEFc,EAAoBH,EAAI3B,KAAK4B,QAAQ,KAAG,wBAAAO,EAAAjB,UAAAe,OAC9C,gBAJgBd,GAAA,OAAAa,EAAAZ,MAAA,KAAAlB,YAAA,GAMZkC,EAAkB,eAAAC,EAAA9C,YAAAC,IAAAC,MAAG,SAAA6C,EAAOC,GAAI,IAAAZ,EAAA,OAAAnC,IAAAW,MAAA,SAAAqC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EACnBlB,EAAQ,GAADyB,OAAIU,EAAQ,oBAAAV,OAAmB0B,EAAI,KAAA1B,OAAIW,IAAW,KAAD,EAAjE,OAAHG,EAAGa,EAAA9B,KAAA8B,EAAAxB,OAAA,SAEFW,EAAI3B,KAAK4B,QAAQC,IAAIC,IAAoB,wBAAAU,EAAAtB,UAAAoB,OAChD,gBAJuBG,GAAA,OAAAJ,EAAAjB,MAAA,KAAAlB,YAAA,GAMlBwC,EAAY,eAAAC,EAAApD,YAAAC,IAAAC,MAAG,SAAAmD,IAAA,IAAAlB,EAAAC,EAAAkB,EAAA3C,UAAA,OAAAV,IAAAW,MAAA,SAAA2C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,OAAiB,OAAVoB,EAAMmB,EAAAtC,OAAA,QAAAC,IAAAqC,EAAA,GAAAA,EAAA,GAAG,EAACC,EAAAxC,KAAA,EACnBlB,EAAQ,GAADyB,OAAIU,EAAQ,8CAAAV,OAA6Ca,EAAM,KAAAb,OAAIW,IAAU,OAA7F,OAAHG,EAAGmB,EAAApC,KAAAoC,EAAA9B,OAAA,SAEFW,EAAI3B,KAAK4B,QAAQC,IAAIkB,IAAiB,wBAAAD,EAAA5B,UAAA0B,OAC7C,kBAJiB,OAAAD,EAAAvB,MAAA,KAAAlB,YAAA,GAMZ8C,EAAQ,eAAAC,EAAA1D,YAAAC,IAAAC,MAAG,SAAAyD,EAAOhB,GAAE,IAAAP,EAAA,OAAAnC,IAAAW,MAAA,SAAAgD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EACPlB,EAAQ,GAADyB,OAAIU,EAAQ,WAAAV,OAAUqB,EAAE,KAAArB,OAAIW,IAAW,KAAD,EAAtD,OAAHG,EAAGwB,EAAAzC,KAAAyC,EAAAnC,OAAA,SAEF+B,EAAiBpB,EAAI3B,KAAK4B,QAAQ,KAAG,wBAAAuB,EAAAjC,UAAAgC,OAC3C,gBAJYE,GAAA,OAAAH,EAAA7B,MAAA,KAAAlB,YAAA,GAQR4B,EAAsB,SAACuB,GAC5B,MAAO,CACNd,KAAMc,EAAKd,KACXe,YAAaD,EAAKC,YAAW,GAAAzC,OAAMwC,EAAKC,YAAYC,MAAM,EAAE,KAAI,OAAO,uFACvEC,UAAYH,EAAKG,UAAUC,KAAM,IAAKJ,EAAKG,UAAUE,UACrDC,SAAUN,EAAKO,KAAK,GAAGjE,IACvBkE,KAAMR,EAAKO,KAAK,GAAGjE,IACnBuC,GAAImB,EAAKnB,GACT4B,OAAQT,EAAKS,OAAOC,QAIhBhB,EAAmB,SAACe,GAAY,IAADE,EACpC,MAAO,CACN9B,GAAI4B,EAAO5B,GACX+B,MAAOH,EAAOG,MAAQH,EAAOG,MAAQ,uFACrCT,UAAYM,EAAON,UAAUC,KAAM,IAAKK,EAAON,UAAUE,UACzDQ,MAAkC,IAA3BJ,EAAOK,OAAO,GAAGD,MAAc,eAAc,GAAArD,OAAKiD,EAAOK,OAAO,GAAGD,MAAK,KAC/EZ,YAAaQ,EAAOR,aAAe,0BACnCc,UAAWN,EAAOM,UAAS,GAAAvD,OAAMiD,EAAOM,UAAS,MAAM,2CACvDC,UAA+B,QAArBL,EAAAF,EAAOQ,YAAY,UAAE,IAAAN,OAAA,EAArBA,EAAuBK,WAAY,UAI/C,MAAO,CACLhD,aACAnC,UACAC,aACAsC,mBACAM,eACAW,eACAM,WACAZ,wB,qDEzEH,2BAsBemC,IAnBY,SAACrF,EAASsF,EAAWC,GAC5C,OAAOvF,GACH,IAAK,UACD,OAAOX,cAACmG,IAAO,IAEnB,IAAK,UACD,OAAOD,EAAkBlG,cAACiG,EAAS,IAAKjG,cAACmG,IAAO,IAEpD,IAAK,YACD,OAAOnG,cAACiG,EAAS,IAErB,IAAK,QACD,OAAOjG,cAACoG,IAAY,IAExB,QACI,MAAM,IAAI/D,MAAM,+B,+DClBb,MAA0B,qCCA1B,MAA0B,0C,OCiB1BgE,IAbG,WACd,OACIC,eAAA,OAAKlG,UAAU,cAAamG,SAAA,CACxBvG,cAAA,OAAKC,IAAKuG,EAAUrG,IAAI,aACxBmG,eAAA,OAAKlG,UAAU,mBAAkBmG,SAAA,CAAC,yBACRvG,cAAA,SAAK,iBAG/BA,cAAA,OAAKC,IAAKwG,EAActG,IAAI,uB,4HCwEzBuG,EA3EI,WAEf,IAAAnG,EAAoCC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAzCoG,EAAUlG,EAAA,GAAEmG,EAAanG,EAAA,GAChCoG,EAA8CrG,oBAAS,GAAMsG,EAAApG,YAAAmG,EAAA,GAAtDX,EAAeY,EAAA,GAAEC,EAAkBD,EAAA,GAC1CE,EAA4BxG,mBAAS,GAAEyG,EAAAvG,YAAAsG,EAAA,GAAhC7D,EAAM8D,EAAA,GAAEC,EAASD,EAAA,GACxBE,EAA0C3G,oBAAS,GAAM4G,EAAA1G,YAAAyG,EAAA,GAAlDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,EAA6ClH,cAArC8D,EAAYoD,EAAZpD,aAAcxD,EAAO4G,EAAP5G,QAASC,EAAU2G,EAAV3G,WAE/B4G,qBAAW,WACPC,EAAUtE,GAAQ,KAEpB,IAGF,IAAMsE,EAAY,SAACtE,EAAQuE,GACbX,GAAVW,GACAvD,EAAahB,GACZwE,KAAKC,GACLD,MAAK,kBAAM/G,EAAW,iBAGrBgH,EAAiB,SAACC,GACpB,IAAIC,GAAQ,EACRD,EAAc7F,OAAS,IACvB8F,GAAQ,GAGZlB,EAAc,GAADtE,OAAAyF,YAAMpB,GAAUoB,YAAKF,KAClCd,GAAmB,GACnBG,EAAW/D,EAAS,GACpBmE,EAAiBQ,IA4BrB,OACIxB,eAAA,OAAKlG,UAAU,eAAcmG,SAAA,CACzBP,YAAmBrF,GAAS,kBA3BpC,SAAuBqH,GACnB,IAAMxC,EAAQwC,EAAI1E,KAAI,SAAC2E,EAAMC,GAEzB,OACIlI,cAAA,MAAII,UAAU,eAAcmG,SAE5BD,eAAC6B,IAAI,CAACC,GAAE,WAAA9F,OAAa2F,EAAKtE,IAAK4C,SAAA,CAC3BvG,cAAA,OAAKC,IAAKgI,EAAKhD,UACV9E,IAAK8H,EAAKvC,MACVtF,UAAU,qBACfJ,cAAA,OAAKI,UAAU,oBAAmBmG,SAAE0B,EAAKvC,QACzC1F,cAAA,OAAKI,UAAU,qBAAoBmG,SAAE0B,EAAKtC,YANrCuC,MAYjB,OACIlI,cAAA,MAAII,UAAU,eAAcmG,SACvBf,IAQ6B6C,CAAa1B,KAAaT,GAE5DlG,cAAA,UAAQI,UAAU,mCACVkI,SAAYpC,EACZqC,MAAS,CAAC,QAAYlB,EAAgB,OAAS,SAC/CmB,QAAW,kBAAMf,EAAUtE,IAAQoD,SAEvCvG,cAAA,OAAKI,UAAU,QAAOmG,SAAC,oB,QCjExBkC,UATG,WACd,OACInC,eAAAoC,WAAA,CAAAnC,SAAA,CACIvG,cAACqG,IAAS,IACVrG,cAAC0G,EAAU","file":"static/js/5.c0d78411.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage  = () => {\r\n    return (\r\n        <img src={img} alt=\"Erorr\" className='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request,  clearError, process, setProcess} = useHttp();\r\n\r\n\tconst\t_apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst\t_apiKey  = 'apikey=502a8f9406329dde74089757c4624e16';\r\n\tconst\t_baseOffset = 210;\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\t// console.log(res.data.results[0]);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t// console.log(res.data.results.map(_transformCharacter));\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\t// console.log(res.data.results.map(_transformComics));\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t//\tconsole.log(_transformComics(res.data.results[0]));\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t\t}\r\n\r\n\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0,200)}...`: 'Опис відсутній ....',\r\n\t\t\tthumbnail:  char.thumbnail.path +'.'+ char.thumbnail.extension,\r\n\t\t\thomePage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title ? comics.title : 'Опис відсутній ....' ,\r\n\t\t\tthumbnail:  comics.thumbnail.path +'.'+ comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price === 0 ? 'not avilable' :`${comics.prices[0].price}$`,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\t? `${comics.pageCount} $`: \"No information about the number of pages\",\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\"\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\t\tclearError,\r\n\t\t\tprocess,\r\n\t\t\tsetProcess,\r\n\t\t\tgetAllCharacters,\r\n\t\t\tgetCharacter,\r\n\t\t\tgetAllComics,\r\n\t\t\tgetComic,\r\n\t\t\tgetCharacterByName};\r\n}\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers =  {'Content-Type' : 'application/json'}) => {\r\n\r\n         setProcess('loading');\r\n\r\n         try{\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n         } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n         }\r\n\r\n    } , []);\r\n\r\n    const clearError = useCallback( () => {\r\n            setProcess('loading');\r\n\r\n    }, [])\r\n\r\n\r\n    return {request, clearError, process, setProcess}\r\n}\r\n","import Spinner from '../components/spinner/Spinner';\r\nimport ErorrMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nconst setContentWithLoad = (process, Component, newItemsLoading) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n\r\n        case 'loading':\r\n            return newItemsLoading ? <Component/> : <Spinner/>;\r\n\r\n        case 'confirmed':\r\n            return <Component />;\r\n\r\n        case 'error':\r\n            return <ErorrMessage/>;\r\n\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContentWithLoad;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import {  useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport setContentWithLoad from '../../utils/setContentWithLoad';\n\nimport './comicsList.scss';\n\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [endComicsList, setEndcomicsList] = useState(false);\n\n    const { getAllComics, process, setProcess} = useMarvelService();\n\n    useEffect( () => {\n        onRequest(offset, true);\n        // eslint-disable-next-line\n    },[]);\n\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewItemsLoading(false) : setNewItemsLoading(true)\n        getAllComics(offset)\n        .then(onComicsLoaded)\n        .then(() => setProcess('confirmed'))\n    }\n\n    const onComicsLoaded = (newComicsList) => {\n        let ended = false;\n        if( newComicsList.length < 8 ){\n            ended = true;\n        }\n\n        setComicsList( [...comicsList, ...newComicsList]);\n        setNewItemsLoading(false);\n        setOffset( offset + 8);\n        setEndcomicsList(ended);\n    }\n\n    function renderComics (arr) {\n        const items = arr.map((item, i) => {\n\n            return(\n                <li className=\"comics__item\"\n                    key={i}>\n                <Link to={`/comics/${item.id}`}>\n                    <img src={item.thumbnail}\n                         alt={item.title}\n                         className=\"comics__item-img\"/>\n                    <div className=\"comics__item-name\">{item.title}</div>\n                    <div className=\"comics__item-price\">{item.price}</div>\n                </Link>\n            </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n\n    return (\n        <div className=\"comics__list\">\n           {setContentWithLoad(process, () => renderComics(comicsList), newItemsLoading)}\n\n            <button className=\"button button__main button__long\"\n                    disabled = {newItemsLoading}\n                    style = {{'display' : endComicsList ? 'none' : 'block' }}\n                    onClick = {() => onRequest(offset)}\n                    >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n}\n\nexport default ComicsList;\n","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default ComicPage;\r\n"],"sourceRoot":""}