{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/SinglePage.js"],"names":["ErrorMessage","_jsx","src","img","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homePage","urls","wiki","comics","items","_comics$textObjects$","title","price","prices","pageCount","language","textObjects","Skeleton","_jsxs","_Fragment","children","setContent","Component","Spinner","ErorrMessage","AppBanner","avengers","avengersLogo","SinglePage","dataType","useParams","setData","_useMarvelService","useEffect","updateData","then","onDataLoaded"],"mappings":"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","file":"static/js/6.4504ef1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage  = () => {\r\n    return (\r\n        <img src={img} alt=\"Erorr\" className='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request,  clearError, process, setProcess} = useHttp();\r\n\r\n\tconst\t_apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst\t_apiKey  = 'apikey=502a8f9406329dde74089757c4624e16';\r\n\tconst\t_baseOffset = 210;\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\t// console.log(res.data.results[0]);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t// console.log(res.data.results.map(_transformCharacter));\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\t// console.log(res.data.results.map(_transformComics));\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t//\tconsole.log(_transformComics(res.data.results[0]));\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t\t}\r\n\r\n\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0,200)}...`: 'Опис відсутній ....',\r\n\t\t\tthumbnail:  char.thumbnail.path +'.'+ char.thumbnail.extension,\r\n\t\t\thomePage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title ? comics.title : 'Опис відсутній ....' ,\r\n\t\t\tthumbnail:  comics.thumbnail.path +'.'+ comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price === 0 ? 'not avilable' :`${comics.prices[0].price}$`,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\t? `${comics.pageCount} $`: \"No information about the number of pages\",\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\"\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\t\tclearError,\r\n\t\t\tprocess,\r\n\t\t\tsetProcess,\r\n\t\t\tgetAllCharacters,\r\n\t\t\tgetCharacter,\r\n\t\t\tgetAllComics,\r\n\t\t\tgetComic,\r\n\t\t\tgetCharacterByName};\r\n}\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers =  {'Content-Type' : 'application/json'}) => {\r\n\r\n         setProcess('loading');\r\n\r\n         try{\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n         } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n         }\r\n\r\n    } , []);\r\n\r\n    const clearError = useCallback( () => {\r\n            setProcess('loading');\r\n\r\n    }, [])\r\n\r\n\r\n    return {request, clearError, process, setProcess}\r\n}\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErorrMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n\r\n        case 'loading':\r\n            return <Spinner/>;\r\n\r\n        case 'confirmed':\r\n            return <Component data = {data}/>;\r\n\r\n        case 'error':\r\n            return <ErorrMessage/>;\r\n\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\r\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\r\n// А если вынесем их все в App.js - то они будут одни на все страницы\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n        const {id} = useParams();\r\n        const [data, setData] = useState(null);\r\n        const { getComic, getCharacter, clearError , process, setProcess} = useMarvelService();\r\n\r\n        useEffect(() => {\r\n            updateData()\r\n            // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, [id])\r\n\r\n        const updateData = () => {\r\n            clearError();\r\n\r\n            switch (dataType) {\r\n                case 'comic':\r\n                    getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'))\r\n                    break;\r\n                case 'character':\r\n                    getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                    break;\r\n                default:  throw new Error('Unexpected process state');\r\n            }\r\n        }\r\n\r\n        const onDataLoaded = (data) => {\r\n            setData(data);\r\n        }\r\n\r\n              return (\r\n            <>\r\n                <AppBanner/>\r\n                {setContent(process, Component, data)}\r\n\r\n            </>\r\n        )\r\n}\r\n\r\nexport default SinglePage;\r\n"],"sourceRoot":""}