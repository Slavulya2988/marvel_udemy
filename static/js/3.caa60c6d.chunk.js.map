{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","utils/setContentWithLoad.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","className","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","process","setProcess","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","_ref2","_callee2","id","_context2","getCharacterByName","_ref3","_callee3","name","_context3","_x2","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_context5","_x3","char","description","slice","thumbnail","path","extension","homePage","urls","wiki","comics","items","_comics$textObjects$","title","price","prices","pageCount","language","textObjects","Skeleton","_jsxs","_Fragment","children","setContent","Component","Spinner","ErorrMessage","setContentWithLoad","newItemsLoading","View","styledField","objectFit","style","href","RandomChar","setChar","_useMarvelService","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","onClick","mjolnir","CharList","props","charList","setCharList","_useState3","_useState4","setNewItemsLoading","_useState5","_useState6","setOffset","_useState7","_useState8","endCharList","setEndCharList","onRequest","initial","onCharsLoaded","newCharList","ended","_toConsumableArray","itemRefs","useRef","renderChar","arr","item","i","imgStyle","tabIndex","ref","el","current","selectedChar","forEach","classList","remove","add","focus","element","useMemo","disabled","comicId","resourceURI","match","join","Link","to","CharInfo","charId","CharSearchForm","errorMessage","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","component","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","args","Array","_key","call","state","error","_createClass","key","value","eroorInfo","console","log","this","setState","MainPage","decoration"],"mappings":"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","file":"static/js/3.caa60c6d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nimport './errorMessage.scss';\r\n\r\nconst ErrorMessage  = () => {\r\n    return (\r\n        <img src={img} alt=\"Erorr\" className='error' />\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n\tconst { request,  clearError, process, setProcess} = useHttp();\r\n\r\n\tconst\t_apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst\t_apiKey  = 'apikey=502a8f9406329dde74089757c4624e16';\r\n\tconst\t_baseOffset = 210;\r\n\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\t// console.log(res.data.results[0]);\r\n\t\treturn _transformCharacter(res.data.results[0]);\r\n\t\t}\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\t// console.log(res.data.results.map(_transformCharacter));\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\t// console.log(res.data.results.map(_transformComics));\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t//\tconsole.log(_transformComics(res.data.results[0]));\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t\t}\r\n\r\n\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description ? `${char.description.slice(0,200)}...`: 'Опис відсутній ....',\r\n\t\t\tthumbnail:  char.thumbnail.path +'.'+ char.thumbnail.extension,\r\n\t\t\thomePage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tid: char.id,\r\n\t\t\tcomics: char.comics.items\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title ? comics.title : 'Опис відсутній ....' ,\r\n\t\t\tthumbnail:  comics.thumbnail.path +'.'+ comics.thumbnail.extension,\r\n\t\t\tprice: comics.prices[0].price === 0 ? 'not avilable' :`${comics.prices[0].price}$`,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\t? `${comics.pageCount} $`: \"No information about the number of pages\",\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\"\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\t\tclearError,\r\n\t\t\tprocess,\r\n\t\t\tsetProcess,\r\n\t\t\tgetAllCharacters,\r\n\t\t\tgetCharacter,\r\n\t\t\tgetAllComics,\r\n\t\t\tgetComic,\r\n\t\t\tgetCharacterByName};\r\n}\r\n\r\nexport default useMarvelService;\r\n","import { useState, useCallback } from \"react\"\r\n\r\nexport const useHttp = () => {\r\n\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers =  {'Content-Type' : 'application/json'}) => {\r\n\r\n         setProcess('loading');\r\n\r\n         try{\r\n            const response = await fetch(url, {method, body, headers});\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n            const data = await response.json();\r\n\r\n            return data;\r\n\r\n         } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n         }\r\n\r\n    } , []);\r\n\r\n    const clearError = useCallback( () => {\r\n            setProcess('loading');\r\n\r\n    }, [])\r\n\r\n\r\n    return {request, clearError, process, setProcess}\r\n}\r\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErorrMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n\r\n        case 'loading':\r\n            return <Spinner/>;\r\n\r\n        case 'confirmed':\r\n            return <Component data = {data}/>;\r\n\r\n        case 'error':\r\n            return <ErorrMessage/>;\r\n\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContent;\r\n","import Spinner from '../components/spinner/Spinner';\r\nimport ErorrMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nconst setContentWithLoad = (process, Component, newItemsLoading) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n\r\n        case 'loading':\r\n            return newItemsLoading ? <Component/> : <Spinner/>;\r\n\r\n        case 'confirmed':\r\n            return <Component />;\r\n\r\n        case 'error':\r\n            return <ErorrMessage/>;\r\n\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nexport default setContentWithLoad;\r\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nconst RandomChar = () => {\r\n\r\n    const [char, setChar] = useState({});\r\n    const { getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timerId = setInterval(updateChar, 60000);\r\n\r\n        return () => {\r\n            clearInterval(timerId)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = () => {\r\n\t\tclearError();\r\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n\t\tgetCharacter(id)\r\n\t\t\t.then(onCharLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n   }\r\n\r\n    return (\r\n        <div className=\"randomchar\">\r\n            {setContent(process, View, char)}\r\n\r\n            <div className=\"randomchar__static\">\r\n                <p className=\"randomchar__title\">\r\n                    Random character for today!<br/>\r\n                    Do you want to get to know him better?\r\n                </p>\r\n                <p className=\"randomchar__title\">\r\n                    Or choose another one\r\n                </p>\r\n                <button className=\"button button__main\"\r\n                        onClick={updateChar}>\r\n                    <div className=\"inner\">try it</div>\r\n                </button>\r\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst  View = ({data}) => {\r\n    const {name, description, thumbnail, homePage, wiki} = data;\r\n    const checkImg = thumbnail ==='http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\r\n    const styledField = checkImg ?  {objectFit: 'contain'} :  null;\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style = {styledField}/>\r\n        <div className=\"randomchar__info\">\r\n            <p className=\"randomchar__name\">{name}</p>\r\n            <p className=\"randomchar__descr\">\r\n                {description}\r\n            </p>\r\n            <div className=\"randomchar__btns\">\r\n                <a href={homePage} className=\"button button__main\">\r\n                    <div className=\"inner\">homepage</div>\r\n                </a>\r\n                <a href={wiki} className=\"button button__secondary\">\r\n                    <div className=\"inner\">Wiki</div>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;\r\n","import { useState, useEffect, useRef, useMemo } from 'react';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContentWithLoad from '../../utils/setContentWithLoad';\r\n\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) =>  {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\r\n    const [offset, setOffset] = useState(210);\r\n    const [endCharList, setEndCharList] = useState(false);\r\n\r\n    const {getAllCharacters, process, setProcess} = useMarvelService();\r\n\r\n    useEffect( () => {\r\n        onRequest(offset, true);\r\n        // eslint-disable-next-line\r\n    },[]);\r\n\r\n    const onRequest = (offset, initial) => {\r\n\t\tinitial ? setNewItemsLoading(false) : setNewItemsLoading(true)\r\n   \t    getAllCharacters(offset)\r\n        .then(onCharsLoaded)\r\n        .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onCharsLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if( newCharList.length < 9 ){\r\n            ended = true;\r\n        }\r\n        setCharList([...charList, ...newCharList]);\r\n        setNewItemsLoading(newItemsLoading => false);\r\n        setOffset(offset => offset + 9);\r\n        setEndCharList(ended);\r\n    }\r\n\r\n    // console.log('CharList Render');\r\n\r\n    const itemRefs = useRef([]);\r\n\r\n    const focusOnItem = (id) => {\r\n\r\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\r\n        itemRefs.current[id].classList.add('char__item_selected');\r\n        itemRefs.current[id].focus();\r\n    }\r\n\r\n    function renderChar (arr) {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n\r\n            return(\r\n                <li className=\"char__item\"\r\n                    tabIndex={0}\r\n                    ref={(el) => itemRefs.current[i] = el}\r\n                    key={item.id}\r\n                    onClick={() => {\r\n                        props.selectedChar(item.id);\r\n                        focusOnItem(i);\r\n                        }\r\n                    }>\r\n                <img src={item.thumbnail}\r\n                     alt={item.name}\r\n\r\n                     style={imgStyle}/>\r\n                <div className=\"char__name\">{item.name}</div>\r\n            </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const element = useMemo(() => {\r\n        return setContentWithLoad(process, () => renderChar(charList), newItemsLoading)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [process]);\r\n\r\n    return (\r\n        <div className=\"char__list\">\r\n           {element}\r\n\r\n            <button className=\"button button__main button__long\"\r\n                    disabled = {newItemsLoading}\r\n                    style = {{'display' : endCharList ? 'none' : 'block' }}\r\n                    onClick = {() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n }\r\n\r\n\r\nexport default CharList;\r\n","import { useState, useEffect } from 'react';\r\n\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContent from '../../utils/setContent';\r\n\r\nimport './charInfo.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CharInfo = (props) => {\r\n\r\n    const [char, setChar] = useState(null);\r\n    const {getCharacter, clearError, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [props.charId])\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n      }\r\n\r\n    const updateChar = () => {\r\n        const {charId}  = props;\r\n        if(!charId){\r\n            return;\r\n        }\r\n\t\tclearError();\r\n\t\tgetCharacter(charId)\r\n              .then(onCharLoaded)\r\n              .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"char__info\">\r\n            {setContent(process, View ,char)}\r\n        </div>\r\n    )\r\n    }\r\n\r\n    // FSM finite-state machine\r\n    // конечное количество состояний\r\n    // механизм перехода\r\n    // удобний функционал отображения\r\n    // только одно активное состояние\r\n\r\nconst View = ({data}) => {\r\n    const {name, description, thumbnail, homePage, wiki, comics} = data;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n            if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n\r\n    return(\r\n        <>\r\n         <div className=\"char__basics\">\r\n                <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homePage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki} className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n               {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {comics.length === 0 ? 'Комікси відсутні' : null}\r\n\r\n                {comics.slice(0,10).map((item, i) => {\r\n                    const comicId = item.resourceURI.match(/(\\d{3,5})/gi).join('');\r\n                    return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                               <Link to={`/comics/${comicId}`}>\r\n                                    {item.name}\r\n                               </Link>\r\n                            </li>\r\n                            )\r\n                    })\r\n                }\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\nexport default CharInfo;\r\n","import {useState} from 'react';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './charSearchForm.scss';\r\n\r\nconst CharSearchForm = () => {\r\n    const [char, setChar] = useState(null);\r\n    const { getCharacterByName, clearError, process, setProcess} = useMarvelService();\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n    }\r\n\r\n    const updateChar = (name) => {\r\n        clearError();\r\n\r\n        getCharacterByName(name)\r\n            .then(onCharLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n    const errorMessage = process === 'error' ? <div className=\"char__search-critical-error\"><ErrorMessage /></div> : null;\r\n    const results = !char ? null : char.length > 0 ?\r\n                    <div className=\"char__search-wrapper\">\r\n                        <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n                        <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\r\n                            <div className=\"inner\">To page</div>\r\n                        </Link>\r\n                    </div> :\r\n                    <div className=\"char__search-error\">\r\n                        The character was not found. Check the name and try again\r\n                    </div>;\r\n\r\n    return (\r\n        <div className=\"char__search-form\">\r\n            <Formik\r\n                initialValues = {{\r\n                    charName: ''\r\n                }}\r\n                validationSchema = {Yup.object({\r\n                    charName: Yup.string().required('This field is required')\r\n                })}\r\n                onSubmit = { ({charName}) => {\r\n                    updateChar(charName);\r\n                }}\r\n            >\r\n                <Form>\r\n                    <label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n                    <div className=\"char__search-wrapper\">\r\n                        <Field\r\n                            id=\"charName\"\r\n                            name='charName'\r\n                            type='text'\r\n                            placeholder=\"Enter name\"/>\r\n                        <button\r\n                            type='submit'\r\n                            className=\"button button__main\"\r\n                            disabled={process === 'loading'}>\r\n\r\n                            <div className=\"inner\">find</div>\r\n                        </button>\r\n                    </div>\r\n                    <FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n                </Form>\r\n            </Formik>\r\n            {results}\r\n            {errorMessage}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharSearchForm;\r\n","import { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends  Component{\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n// Статический метод обновляет состояние setState який працює только з помилкою\r\n//  static getDerivedStateFromError(error){\r\n//     return {error: true};\r\n//  }\r\n\r\n componentDidCatch(error, eroorInfo){\r\n    console.log(error, eroorInfo);\r\n    this.setState({\r\n        error: true\r\n    })\r\n }\r\n\r\n render(){\r\n    if (this.state.error){\r\n        return <h2>Помилка у процесі виконання. Дивись консоль.</h2>\r\n    }\r\n\r\n    return this.props.children;\r\n\r\n }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm';\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n    const [selectedChar, setChar] = useState(null);\r\n    const onSelectedchar = (id) => {setChar(id)};\r\n    return(\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                    <ErrorBoundary>\r\n                        <CharList selectedChar = {onSelectedchar}/>\r\n                    </ErrorBoundary>\r\n                    <div>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId = {selectedChar}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharSearchForm/>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n\r\n\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n    </>\r\n    )\r\n\r\n};\r\n\r\nexport default MainPage;\r\n"],"sourceRoot":""}